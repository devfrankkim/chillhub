{"version":3,"sources":["assets/noposter.png","assets/imdb.png","assets/loading.gif","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVpresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Error.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Season/index.js","Routes/Season/SeasonContainer.js","Components/PreviousPage.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Gif","src","logo","alt","Text","Text1","Text2","p","Message","text","Rating","Image","props","bgUrl","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","first_air_date","color","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","TVContainer","TVpresenter","Error","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","pastTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","Found","SearchContainer","event","preventDefault","searchByTerm","target","a","SeasonContainer","PreviousLink","Link","PreviousPage","pathName","Backdrop","bgImage","Content","Cover","Data","h2","ItemContainer","Item","Divider","OverView","Imdb","YoutubeContainer","DetailPresenter","img","result","original_name","backdrop_path","runtime","episode_run_time","genres","genre","index","href","imdb_id","rel","width","starRatedColor","starDimension","starSpacing","overview","seasons","videos","height","DetailContainer","pathname","location","includes","match","push","history","numberId","Number","isNaN","Header","header","List","ul","li","current","Slink","withRouter","path","exact","component","Home","TV","Search","Detail","Season","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1587bce8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noposter.34a17caa.png\";","module.exports = __webpack_public_path__ + \"static/media/imdb.56b5d74d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.e0a0a639.gif\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 55px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: #1dd1a1;\n`;\n\nconst Grid = styled.div`\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 150px);\n  grid-gap: 30px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n\n// children is react prop (reserved react prop)\n// children\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/loading.gif\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 40px;\n  margin-top: 50px;\n`;\n\nconst Gif = styled.div``;\n\nexport default () => (\n  <Container>\n    <Gif>\n      <img src={logo} alt=\"loading...\" />{\" \"}\n    </Gif>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  font-size: 20px;\n`;\n\nconst Text = styled.span`\n  color: whitesmoke;\n  font-weight: 500;\n  display: block;\n  padding: 0px 150px;\n`;\n\nconst Text1 = styled.span`\n  color: whitesmoke;\n  font-weight: 500;\n  display: block;\n  padding: 30px 150px;\n`;\n\nconst Text2 = styled.p`\n  font-size: 16px;\n  padding: 0px 200px;\n`;\n\nconst Message = ({ text }) => (\n  <Container>\n    <Text>{text}</Text>\n    <Text1>Suggestions:</Text1>\n    <Text2> ∙ Try different keywords</Text2>\n    <Text2> ∙ Try usinga movie, TV show title</Text2>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst tmdbBaseUrl = \"https://image.tmdb.org/t/p/w200\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.3s linear;\n  text-shadow: 0 0 5px #0fe8f1, 0 0 10px #14f10fba, 0 0 15px #14f10fba,\n    0 0 20px #fff, 0 0 35px #fff, 0 0 40px #14f10f78, 0 0 50px #14f10fba,\n    0 0 75px #14f10fb0;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 150px;\n  background-size: cover;\n  border-radius: 40px;\n  background-position: center center;\n  transition: opacity 0.3s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: rgba(220, 220, 220);\n  font-weight: bold;\n`;\n\nconst Year = styled.span`\n  color: rgba(255, 255, 255, 0.4);\n  font-weight: 600;\n`;\n\nconst Poster = ({ id, imageUrl, rating, title, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `${tmdbBaseUrl}${imageUrl}`\n              : require(\"../assets/noposter.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 20)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string,\n  rating: PropTypes.number,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 30px 10px 10px 30px;\n  padding-top: 20px;\n  padding-bottom: 90px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Chillhub</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Chillhub</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date\n                    ? movie.release_date.substring(0, 4)\n                    : movie.first_air_date\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"Upcoming playing\">\n            {upComing.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date\n                    ? movie.release_date.substring(0, 4)\n                    : movie.first_air_date\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular playing\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date\n                    ? movie.release_date.substring(0, 4)\n                    : movie.first_air_date\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  trending: () => api.get(\"movie/trending\"),\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  similar: id => api.get(`movie/${id}/similar`),\n  recommendations: id => api.get(`movie/${id}/recommendations`),\n  reviews: id => api.get(`movie/${id}/reviews`),\n  searchMovie: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  searchTV: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  similar: id => api.get(`tv/${id}/similar`),\n  recommendations: id => api.get(`tv/${id}/recommendations`),\n  reviews: id => api.get(`tv/${id}/reviews`)\n};\n","import HomeContainer from \"./HomeContainer.js\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter.js\";\nimport { moviesApi } from \"api.js\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      // console.log(nowPlaying);\n      const {\n        data: { results: upComing }\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying: nowPlaying,\n        upComing: upComing,\n        popular: popular\n      });\n    } catch {\n      this.setState({\n        error: `Your search did not have any matches`\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    // console.log(this.setState);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\n// state 3가지, go to api\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 30px 10px 10px 30px;\n  padding-top: 20px;\n  padding-bottom: 90px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title> TV shows | Chillhub</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date\n                    ? show.first_air_date.substring(0, 4)\n                    : show.first_air_date\n                }\n              />\n            ))}\n          </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date\n                    ? show.first_air_date.substring(0, 4)\n                    : show.first_air_date\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"airingToday Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date\n                    ? show.first_air_date.substring(0, 4)\n                    : show.first_air_date\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVpresenter from \"./TVpresenter.js\";\nimport { tvApi } from \"../../api.js\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    // console.log(this.setState);\n    return (\n      <TVpresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  font-size: 20px;\n`;\n\nconst Text = styled.span`\n  color: whitesmoke;\n  font-weight: 500;\n  display: block;\n  padding: 0px 150px;\n`;\n\nconst Text1 = styled.span`\n  color: whitesmoke;\n  font-weight: 500;\n  display: block;\n  padding: 30px 150px;\n`;\n\nconst Text2 = styled.p`\n  font-size: 15px;\n  padding: 0px 200px;\n`;\n\nconst Error = ({ text }) => (\n  <Container>\n    <Text>{text}</Text>\n    <Text1>Suggestions:</Text1>\n    <Text2> ∙ Try different keywords</Text2>\n    <Text2> ∙ Try usinga movie, TV show title</Text2>\n  </Container>\n);\n\nError.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default Error;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Error from \"Components/Error\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 30px 10px 10px 30px;\n  padding-top: 20px;\n  padding-bottom: 90px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 20px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  pastTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Chillhub</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date\n                    ? movie.release_date.substring(0, 4)\n                    : movie.first_air_date\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date\n                    ? show.first_air_date.substring(0, 4)\n                    : show.first_air_date\n                }\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Error color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message\n          text={`Your search for \"${pastTerm}\" did not have any matches`}\n          Found\n          color=\"#95a5a6\"\n        />\n      )}\n  </Container>\n);\n// handleSubmit은 searchTerm과 search들을 찾는다.\n// input을 제어할 수 있어야 한다. => (value)\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  pastTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer.js\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter.js\";\nimport { moviesApi, tvApi } from \"../../api.js\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    pastTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = event => {\n    // console.log(event);\n    const {\n      target: { value }\n    } = event;\n    // console.log(value);\n    this.setState({\n      searchTerm: value\n    });\n    // event.preventDefault();\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ pastTerm: searchTerm });\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.searchMovie(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.searchTV(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      // console.log(searchTerm);\n      this.setState({\n        error: `Your search for ${searchTerm} did not have any matches. `\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      pastTerm,\n      loading,\n      error\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        pastTerm={pastTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import SeasonContainer from \"./SeasonContainer\";\n\nexport default SeasonContainer;\n","import React from \"react\";\nimport SeasonPresenter from \"./SeasonPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {};\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst PreviousLink = styled(Link)`\n  position: fixed;\n  top: 60px;\n  right: 50px;\n  font-size: 40px;\n  opacity: 0.3;\n`;\n\nconst PreviousPage = ({ pathName }) => (\n  <PreviousLink to={`/${pathName}`}>{\"< Go back \"}</PreviousLink>\n);\n\nexport default PreviousPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Season from \"../Season\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport StarRatings from \"react-star-ratings\";\nimport Youtube from \"react-youtube\";\nimport imdb from \"../../assets/imdb.png\";\nimport { Link } from \"react-router-dom\";\nimport PreviousPage from \"../../Components/PreviousPage\";\n\nconst tmdbOriginalURL = \"https://image.tmdb.org/t/p/original\";\n\nconst Container = styled.div`\n  height: calc(100vh - 80px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(2px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: felx;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 80px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h2`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n  font-size: 15px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst OverView = styled.p`\n  margin-top: 30px;\n  font-size: 17px;\n  opacity: 0.7;\n  line-height: 2;\n  width: 70%;\n`;\n\nconst Imdb = styled.div`\n  display: inline-block;\n  position: relative;\n  top: 3px;\n  width: 16px;\n  background-size: cover;\n`;\n\nconst YoutubeContainer = styled.div`\n  margin-top: 30px;\n  position: relative;\n`;\n\nconst SeasonImg = styled.img`\n  width: 70px;\n  height: 110px;\n  margin-right: 5px;\n`;\n\nconst SeasonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst SeasonTitle = styled.p`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\n// const title =\n//   result.origianl_title && result.origianl_title.length > substrLength\n//     ? `${result.original_title.substring(0, substrLength)}...`\n//     : result.original_title;\n\n// const name =\n//   result.original_name && result.original_name.length > substrLength\n//     ? `${result.original_name.substring(0, substrLength)}...`\n//     : result.original_name;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Chillhub</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}\n          | Chillhub\n        </title>\n      </Helmet>\n      <Backdrop bgImage={`${tmdbOriginalURL}${result.backdrop_path}`} />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `${tmdbOriginalURL}${result.poster_path}`\n              : require(\"../../assets/noposter.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n\n          <ItemContainer>\n            {result.release_date || result.first_air_date ? (\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n            ) : (\n              \"  Unknown dates\"\n            )}\n            <Divider>∙</Divider>\n            {result.runtime > 0 || result.episode_run_time > 0 ? (\n              <>\n                <Item>\n                  {result.runtime ? result.runtime : result.episode_run_time[0]}\n                  min\n                </Item>\n              </>\n            ) : (\n              \"    Unknown minutes\"\n            )}\n            <Divider>∙</Divider>\n            {result.genres.length > 0 ? (\n              <>\n                <Item>\n                  {result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n                </Item>\n              </>\n            ) : (\n              \" Unknown generes\"\n            )}\n            <Divider>∙</Divider>\n            <Imdb>\n              <a\n                href={\n                  result.imdb_id\n                    ? `https://www.imdb.com/title/${result.imdb_id}`\n                    : \"https://www.imdb.com\"\n                }\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img\n                  src=\"https://m.media-amazon.com/images/G/01/imdb/images/desktop-favicon-2165806970._CB484110913_.ico\"\n                  width=\"26px\"\n                  alt=\"imdb_icon\"\n                />\n              </a>\n            </Imdb>\n            {result.original_title ? (\n              <PreviousPage pathName=\"tv\" />\n            ) : (\n              <PreviousPage pathName=\"movie\" />\n            )}\n          </ItemContainer>\n          <Item>\n            <StarRatings\n              rating={result.vote_average / 2}\n              starRatedColor=\"rgb(255, 0, 0)\"\n              starDimension=\"25px\"\n              starSpacing=\"3px\"\n            ></StarRatings>\n          </Item>\n          <OverView>\n            {result.overview.length > 300\n              ? `${result.overview.substring(0, 200)}...`\n              : result.overview}\n          </OverView>\n          {result.seasons && (\n            <Router>\n              <Link to=\"/show/:id/season\"> Check other \"Season\"</Link>\n            </Router>\n          )}\n          <YoutubeContainer>\n            {result.videos.results.length > 0 ? (\n              <iframe\n                title={result.id}\n                id=\"youtubePlayer\"\n                width=\"550\"\n                height=\"300\"\n                src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}\n              />\n            ) : (\n              `\"Youtube trailers not available\"`\n            )}\n          </YoutubeContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname }\n    } = props;\n\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n    // console.log(this.props);\n    const numberId = Number(id);\n    if (isNaN(numberId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      // const request = await moviesApi.movieDetail(Number(id))\n      // result = request.data;\n      // const request = await tvApi.tvDetail(Number(id))\n      // result = request.data;\n\n      // const { data: result } = isMovie\n      //   ? await moviesApi.movieDetail(Number(id))\n      //   : await tvApi.tvDetail(Number(id));\n\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(Number(id)));\n      } else {\n        ({ data: result } = await tvApi.tvDetail(Number(id)));\n      }\n      // console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    // console.log(this.props);\n    const { result, loading, error } = this.state;\n    // console.log(this.state);\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  z-index: 10;\n  box-shadow: 0px 5px 5px 2px rgba(1, 1, 1, 0.8);\n  background: #000;\n  margin-left: 25px;\n  font-size: 15px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 40px;\n  height: 40px;\n  text-shadow: ${props =>\n    props.current\n      ? \"0 0 5px #228DFF, 0 0 10px #228DFF, 0 0 15px #228DFF, 0 0 20px #fff, 0 0 35px #fff, 0 0 40px #228DFF, 0 0 50px #228DFF, 0 0 75px #228DFF\"\n      : \"transparent\"};\n  text-align: center;\n  border-bottom: 2px solid\n    ${props => (props.current ? \"#1dd1a1\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst Slink = styled(Link)`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    {/* {console.log(pathname)} */}\n    <List>\n      <Item current={pathname === \"/\"}>\n        <Slink to=\"/\">Movie</Slink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <Slink to=\"/tv\">TV</Slink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <Slink to=\"/search\">search</Slink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Season from \"Routes/Season\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Route path=\"/show/:id/season\" component={Season} />\n      <Redirect path=\"*\" to=\"/\"></Redirect>\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router.js\";\nimport GlobalStyles from \"Components/GlobalStyles.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}